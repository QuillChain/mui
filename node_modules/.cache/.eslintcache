[{"/home/binh/projects/mui/src/index.js":"1","/home/binh/projects/mui/src/App.js":"2","/home/binh/projects/mui/src/pages/Notes.js":"3","/home/binh/projects/mui/src/pages/Create.js":"4","/home/binh/projects/mui/src/Component/NoteCard.js":"5","/home/binh/projects/mui/src/Component/Layout.js":"6"},{"size":455,"mtime":1646447929980,"results":"7","hashOfConfig":"8"},{"size":948,"mtime":1646638746221,"results":"9","hashOfConfig":"8"},{"size":1310,"mtime":1646638721849,"results":"10","hashOfConfig":"8"},{"size":3432,"mtime":1646447929980,"results":"11","hashOfConfig":"8"},{"size":762,"mtime":1646458104820,"results":"12","hashOfConfig":"8"},{"size":395,"mtime":1646651083630,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1vq3rfq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/binh/projects/mui/src/index.js",[],["29","30"],"/home/binh/projects/mui/src/App.js",[],"/home/binh/projects/mui/src/pages/Notes.js",["31","32","33","34","35","36","37","38"],"import React, { useEffect, useState } from 'react'\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\n\nimport { Typography, Button, ButtonGroup, Container, TextField } from '@material-ui/core'\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight'\nimport SendIcon from '@mui/icons-material/Send';\nimport './Notes.css'\nimport NoteCard from '../Component/NoteCard';\nimport Layout from '../Component/Layout';\n\n\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/notes')\n      .then(res => res.json())\n      .then(data => setNotes(data))\n  }, [])\n  console.log(notes)\n  const handleDelete = async (id)=>{\n    await fetch('http://localhost:8000/notes/'+id,{\n      method: 'DELETE',\n    });\n    const newNotes = notes.filter(note=> note.id != id) ;\n    setNotes(newNotes);\n  }\n\n  return (\n    <div>\n      <Container className='container'>\n\n        <Grid container spacing={2}>\n\n          {notes.map(note => (\n            <Grid item key={note.id} xs={12} sm={6} md={4} lg={2} >\n              <Paper elevation={8}>\n                <NoteCard note={note} handleDelete={handleDelete}/>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n\n      </Container>\n    </div>\n  )\n}","/home/binh/projects/mui/src/pages/Create.js",["39","40","41","42","43"],"import { TextField, Button, Container, Typography, makeStyles } from '@material-ui/core'\nimport { ArrowBackOutlined, ArrowRightOutlined, Block, ClassRounded } from '@mui/icons-material'\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl'\n\nimport React from 'react'\n\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles({\n  btn: {\n    fontSize: 60,\n    backgroundColor: 'violet',\n    '&:hover': {\n      backgroundColor: 'blue'\n    }\n  },\n  title: {\n    textDecoration: 'underline',\n    marginBottom: 20\n  },\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n}\n)\n\nexport default function Create() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [category, setCategory] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const handleSubmit = (e) => {\n\n    title == '' ? setTitleError(true) : setTitleError(false);\n    details == '' ? setDetailsError(true) : setDetailsError(false);\n\n    e.preventDefault()\n    if (title && details) {\n      fetch('http://localhost:8000/notes',{\n        method: 'POST',\n        headers: {'content-type':'application/json' },\n        body: JSON.stringify({title,details,category})\n      }).then(()=>history.push('/'))\n    }\n  }\n  return (\n    <div>\n      <Container className='container'>\n\n        <Typography\n          variant='h6'\n          color='textSecondary'\n          component='h2'\n          gutterBottom\n        >\n          Create Note Here\n        </Typography>\n        <form noValidate autoComplete='off' onSubmit={handleSubmit}>\n          <TextField\n            onChange={(e) => { setTitle(e.target.value) }}\n            label='Note Title'\n            variant='outlined'\n            color='secondary'\n            fullWidth\n            required\n            className={classes.field}\n            error={titleError}\n          />\n          <TextField\n            onChange={(e) => { setDetails(e.target.value) }}\n            label='Detail'\n            variant='outlined'\n            color='secondary'\n            fullWidth\n            required\n            className={classes.field}\n            multiline\n            rows={5}\n            error={detailsError}\n          />\n          <FormControl className={classes.field}>\n            <FormLabel>Category</FormLabel>\n            <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n              <FormControlLabel control={<Radio />} value='money' label='money' />\n              <FormControlLabel control={<Radio />} value='work' label='work' />\n              <FormControlLabel control={<Radio />} value='todos' label='todos' />\n              <FormControlLabel control={<Radio />} value='reminders' label='reminders' />\n            </RadioGroup>\n          </FormControl>\n\n          <br/>\n          <Button\n            variant='contained'\n            color='secondary'\n            endIcon={<ArrowRightOutlined />}\n            type='submit'\n          >\n\n            SUBMIT\n          </Button>\n\n        </form>\n\n      </Container>\n    </div>\n  )\n}\n","/home/binh/projects/mui/src/Component/NoteCard.js",[],"/home/binh/projects/mui/src/Component/Layout.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":10,"nodeType":"50","messageId":"51","endLine":5,"endColumn":20},{"ruleId":"48","severity":1,"message":"52","line":5,"column":22,"nodeType":"50","messageId":"51","endLine":5,"endColumn":28},{"ruleId":"48","severity":1,"message":"53","line":5,"column":30,"nodeType":"50","messageId":"51","endLine":5,"endColumn":41},{"ruleId":"48","severity":1,"message":"54","line":5,"column":54,"nodeType":"50","messageId":"51","endLine":5,"endColumn":63},{"ruleId":"48","severity":1,"message":"55","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":28},{"ruleId":"48","severity":1,"message":"56","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":16},{"ruleId":"48","severity":1,"message":"57","line":10,"column":8,"nodeType":"50","messageId":"51","endLine":10,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":27,"column":50,"nodeType":"60","messageId":"61","endLine":27,"endColumn":52},{"ruleId":"48","severity":1,"message":"62","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":27},{"ruleId":"48","severity":1,"message":"63","line":2,"column":49,"nodeType":"50","messageId":"51","endLine":2,"endColumn":54},{"ruleId":"48","severity":1,"message":"64","line":2,"column":56,"nodeType":"50","messageId":"51","endLine":2,"endColumn":68},{"ruleId":"58","severity":1,"message":"65","line":43,"column":11,"nodeType":"60","messageId":"61","endLine":43,"endColumn":13},{"ruleId":"58","severity":1,"message":"65","line":44,"column":13,"nodeType":"60","messageId":"61","endLine":44,"endColumn":15},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'TextField' is defined but never used.","'ArrowCircleRightIcon' is defined but never used.","'SendIcon' is defined but never used.","'Layout' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ArrowBackOutlined' is defined but never used.","'Block' is defined but never used.","'ClassRounded' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]